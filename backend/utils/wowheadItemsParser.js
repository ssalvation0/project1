const axios = require('axios');
const cheerio = require('cheerio');

// –ö–µ—à –¥–ª—è –∑–º–µ–Ω—à–µ–Ω–Ω—è –∑–∞–ø–∏—Ç–∞–Ω—å
const itemCache = new Map();

// –ú–∞–ø–ø—ñ–Ω–≥ —Å–ª–æ—Ç—ñ–≤ Wowhead -> –Ω–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞
const SLOT_MAPPING = {
  'Head': 'Head',
  'Neck': 'Neck',
  'Shoulder': 'Shoulders',
  'Shoulders': 'Shoulders',
  'Back': 'Back',
  'Chest': 'Chest',
  'Wrist': 'Wrist',
  'Hands': 'Hands',
  'Waist': 'Waist',
  'Legs': 'Legs',
  'Feet': 'Feet',
  'Finger': 'Finger',
  'Trinket': 'Trinket',
  'Main Hand': 'Main Hand',
  'Off Hand': 'Off Hand',
  'Two-Hand': 'Two-Hand',
  'One-Hand': 'One-Hand',
  'Shield': 'Shield'
};

// –Ü–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ñ —Å–ª–æ—Ç–∏ –¥–ª—è —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è
const INVENTORY_SLOTS = {
  1: 'Head',
  2: 'Neck',
  3: 'Shoulders',
  5: 'Chest',
  6: 'Waist',
  7: 'Legs',
  8: 'Feet',
  9: 'Wrist',
  10: 'Hands',
  11: 'Finger',
  12: 'Trinket',
  13: 'One-Hand',
  14: 'Off Hand',
  15: 'Ranged',
  16: 'Back',
  17: 'Two-Hand',
  21: 'Main Hand',
  22: 'Off Hand',
  23: 'Off Hand'
};

/**
 * –ü–∞—Ä—Å–∏—Ç—å Wowhead —Å—Ç–æ—Ä—ñ–Ω–∫—É —Å–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 * @param {number} setId - ID —Å–µ—Ç—É –Ω–∞ Wowhead
 * @returns {Promise<Array>} –ú–∞—Å–∏–≤ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ —Å–µ—Ç—É
 */
async function parseWowheadSetItems(setId) {
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
  if (itemCache.has(setId)) {
    return itemCache.get(setId);
  }

  try {
    const url = `https://www.wowhead.com/item-set=${setId}`;
    console.log(`üîç –ü–∞—Ä—Å–∏–º–æ –ø—Ä–µ–¥–º–µ—Ç–∏ Wowhead –¥–ª—è —Å–µ—Ç—É ${setId}...`);

    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
      },
      timeout: 10000
    });

    const $ = cheerio.load(response.data);
    const items = [];

    // –®—É–∫–∞—î–º–æ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–µ—Ç—É
    // Wowhead –∑–±–µ—Ä—ñ–≥–∞—î –¥–∞–Ω—ñ –≤ window.wowheadData.itemSets
    const scriptContent = $('script').toArray()
      .map(script => $(script).html())
      .join('\n');

    // –®—É–∫–∞—î–º–æ JSON –¥–∞–Ω—ñ
    const itemSetMatch = scriptContent.match(/new Listview\(\{template: "item", id: "items"[^}]+\}\);?\s*}([^]+?)\);?/);
    
    if (itemSetMatch) {
      // –°–ø—Ä–æ–±—É—î–º–æ –≤–∏—Ç—è–≥–Ω—É—Ç–∏ –¥–∞–Ω—ñ –∑ Listview
      const listviewData = itemSetMatch[1];
      
      // –®—É–∫–∞—î–º–æ –º–∞—Å–∏–≤ items –≤ Listview
      const itemsMatch = listviewData.match(/items:\s*(\[[^\]]+\])/);
      
      if (itemsMatch) {
        try {
          const itemsJson = JSON.parse(itemsMatch[1]);
          for (const item of itemsJson) {
            if (item && item.id) {
              items.push({
                id: item.id,
                name: item.name || 'Unknown Item',
                slot: item.slot || 'Unknown',
                iconUrl: item.icon ? `https://wow.zamimg.com/images/wow/icons/large/${item.icon.toLowerCase()}.jpg` : null,
                itemLevel: item.ilevel || 0,
                rarity: item.quality || 'Epic'
              });
            }
          }
        } catch (jsonError) {
          console.log(`  ‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ JSON items –¥–ª—è —Å–µ—Ç—É ${setId}`);
        }
      }
    }

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–µ—Ç–æ–¥: –ø–∞—Ä—Å–∏–º–æ HTML —Ç–∞–±–ª–∏—Ü—é –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
    if (items.length === 0) {
      // –®—É–∫–∞—î–º–æ —Ç–∞–±–ª–∏—Ü—é –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ - –≤–æ–Ω–∞ —É –Ω–∞—Å –≤ ref-76nw0jdzvp4 –∑ –≥–ª—è–¥—É –Ω–∞ snapshot
      $('table').each((_, table) => {
        const $table = $(table);
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –≤ —Ç–∞–±–ª–∏—Ü—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∏
        if ($table.find('a[href*="/item="]').length === 0) return;
        
        $table.find('tr').each((_, row) => {
          const $row = $(row);
          
          // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫
          if ($row.find('th').length > 0) return;

          const link = $row.find('a[href*="/item="]').first();
          if (link.length === 0) return;

          const href = link.attr('href');
          const itemIdMatch = href.match(/item=(\d+)/);
          if (!itemIdMatch) return;

          const itemId = parseInt(itemIdMatch[1]);
          const itemName = link.text().trim();
          
          // –®—É–∫–∞—î–º–æ —Å–ª–æ—Ç —á–µ—Ä–µ–∑ href —á–∏ —ñ–Ω—à—ñ –º–µ—Ç–æ–¥–∏
          // Wowhead —á–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î data-slot –∞–±–æ —ñ–Ω—à—ñ –∞—Ç—Ä–∏–±—É—Ç–∏
          let slot = 'Unknown';
          
          // –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ wowhead item
          const itemDataMatch = href.match(/item=(\d+).*?slot=(\w+)/);
          if (itemDataMatch && itemDataMatch[2]) {
            slot = SLOT_MAPPING[itemDataMatch[2]] || itemDataMatch[2];
          }
          
          // –°–ø—Ä–æ–±—É—î–º–æ —á–µ—Ä–µ–∑ –Ü–∫–æ–Ω–∫—É - —á–∞—Å—Ç–æ –≤ —ñ–º'—è —Ñ–∞–π–ª—É –≤—Ö–æ–¥–∏—Ç—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
          const iconDiv = $row.find('th div, td div').first();
          const iconLink = iconDiv.find('a').first();
          if (iconLink.length > 0) {
            const iconHref = iconLink.attr('href') || '';
            const iconIdMatch = iconHref.match(/item=(\d+)/);
            if (iconIdMatch) {
              // Wowhead uses icon name pattern
              const iconImg = iconDiv.find('img, .icon-wrapper img').first();
              if (iconImg.length > 0) {
                const iconAlt = iconImg.attr('alt') || '';
                // Try to extract slot from alt text
                const slotMatch = iconAlt.match(/(Head|Shoulders|Chest|Hands|Legs|Feet|Wrist|Waist)/i);
                if (slotMatch) {
                  slot = slotMatch[1].charAt(0) + slotMatch[1].slice(1).toLowerCase();
                  slot = SLOT_MAPPING[slot] || slot;
                }
              }
            }
          }

          // –®—É–∫–∞—î–º–æ —ñ–∫–æ–Ω–∫—É
          const iconImg = $row.find('img').first();
          let iconUrl = null;
          if (iconImg.length > 0) {
            const iconSrc = iconImg.attr('src') || iconImg.attr('data-src');
            if (iconSrc && !iconSrc.includes('pixel.gif') && !iconSrc.includes('blank.gif')) {
              iconUrl = iconSrc.startsWith('http') ? iconSrc : `https://wow.zamimg.com${iconSrc}`;
              // Convert to large icon
              iconUrl = iconUrl.replace(/\/small\//, '/large/');
            }
          }

          // –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π—à–ª–∏ —ñ–∫–æ–Ω–∫—É, –≥–µ–Ω–µ—Ä—É—î–º–æ URL
          if (!iconUrl && itemId) {
            // Wowhead —á–∞—Å—Ç–æ –∑–±–µ—Ä—ñ–≥–∞—î —ñ–∫–æ–Ω–∫—É –≤ –∑–º—ñ–Ω–Ω–∏—Ö JS
            iconUrl = `https://wow.zamimg.com/images/wow/icons/large/inv_misc_questionmark.jpg`;
          }

          // –®—É–∫–∞—î–º–æ item level
          let itemLevel = 0;
          const ilvlCell = $row.find('td').filter((_, cell) => {
            const text = $(cell).text().trim();
            return /^\d+$/.test(text) && parseInt(text) > 100;
          }).first();
          if (ilvlCell.length > 0) {
            itemLevel = parseInt(ilvlCell.text().trim());
          }

          items.push({
            id: itemId,
            name: itemName || 'Unknown Item',
            slot: slot,
            iconUrl: iconUrl,
            itemLevel: itemLevel || 0,
            rarity: 'Epic'
          });
        });
      });
    }

    // –Ø–∫—â–æ –≤—Å–µ —â–µ –Ω–µ–º–∞—î –ø—Ä–µ–¥–º–µ—Ç—ñ–≤, —Å–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ <script> –∑ JSON –¥–∞–Ω–Ω–∏–º–∏
    if (items.length === 0) {
      const scripts = $('script');
      scripts.each((_, script) => {
        const content = $(script).html();
        
        // –®—É–∫–∞—î–º–æ var g_items = ...
        const varMatch = content.match(/var g_items\s*=\s*(\[[^\]]+\])/);
        if (varMatch) {
          try {
            const gItems = JSON.parse(varMatch[1]);
            for (const item of gItems) {
              items.push({
                id: item.id,
                name: item.name,
                slot: INVENTORY_SLOTS[item.invType] || 'Unknown',
                iconUrl: item.icon ? `https://wow.zamimg.com/images/wow/icons/large/${item.icon.toLowerCase()}.jpg` : null,
                itemLevel: 0,
                rarity: 'Epic'
              });
            }
          } catch (err) {
            // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
          }
        }
      });
    }

    // –ö–µ—à—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (items.length > 0) {
      itemCache.set(setId, items);
      console.log(`  ‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${items.length} –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è —Å–µ—Ç—É ${setId}`);
    } else {
      console.log(`  ‚ùå –ü—Ä–µ–¥–º–µ—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Å–µ—Ç—É ${setId}`);
    }

    return items;

  } catch (error) {
    console.error(`  ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥—É Wowhead –¥–ª—è —Å–µ—Ç—É ${setId}:`, error.message);
    return [];
  }
}

module.exports = { parseWowheadSetItems };

