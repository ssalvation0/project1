/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å —Å–µ—Ç—ñ–≤ –∑ Wowhead
 * –í–∏–∫–æ–Ω—É—î: node scripts/updateWowheadImages.js
 */

const fs = require('fs').promises;
const path = require('path');
const { getWowheadSetImage } = require('../utils/wowheadParser');

const TRANSMOGS_DATA_FILE = path.join(__dirname, '../data/transmogs.json');

async function updateWowheadImages() {
  try {
    console.log('üìñ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –∑ transmogs.json...');
    const data = await fs.readFile(TRANSMOGS_DATA_FILE, 'utf-8');
    const transmogs = JSON.parse(data);

    console.log(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${transmogs.length} —Å–µ—Ç—ñ–≤`);
    console.log('üñºÔ∏è  –ü–æ—á–∏–Ω–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑ Wowhead...\n');

    let updated = 0;
    let failed = 0;

    for (let i = 0; i < transmogs.length; i++) {
      const transmog = transmogs[i];
      
      // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —è–∫—â–æ –≤–∂–µ —î –Ω–æ—Ä–º–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–Ω–µ placeholder)
      if (transmog.imageUrl && 
          !transmog.imageUrl.includes('questionmark') && 
          !transmog.imageUrl.includes('classicon_')) {
        console.log(`‚è≠Ô∏è  [${i + 1}/${transmogs.length}] –°–µ—Ç "${transmog.name}" –≤–∂–µ –º–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ`);
        continue;
      }

      if (!transmog.setId) {
        console.log(`‚ö†Ô∏è  [${i + 1}/${transmogs.length}] –°–µ—Ç "${transmog.name}" –Ω–µ –º–∞—î setId, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ`);
        continue;
      }

      console.log(`üîç [${i + 1}/${transmogs.length}] –®—É–∫–∞—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è "${transmog.name}" (setId: ${transmog.setId})...`);
      
      try {
        const wowheadImage = await getWowheadSetImage(transmog.setId);
        
        if (wowheadImage) {
          // –û–Ω–æ–≤–ª—é—î–º–æ imageUrl —Ç–∞ iconUrl —è–∫—â–æ –≤–æ–Ω–∏ –±—É–ª–∏ placeholder
          if (!transmog.imageUrl || transmog.imageUrl.includes('questionmark')) {
            transmog.imageUrl = wowheadImage;
          }
          if (!transmog.iconUrl || transmog.iconUrl.includes('questionmark')) {
            transmog.iconUrl = wowheadImage;
          }
          
          console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ: ${wowheadImage}`);
          updated++;
        } else {
          console.log(`‚ùå –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
          failed++;
        }
        
        // –ó–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ —â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–µ—Ä–≤–µ—Ä
        await new Promise(resolve => setTimeout(resolve, 1000));
      } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–ª—è —Å–µ—Ç—É ${transmog.setId}:`, error.message);
        failed++;
      }
    }

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ
    console.log('\nüíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ...');
    await fs.writeFile(
      TRANSMOGS_DATA_FILE,
      JSON.stringify(transmogs, null, 2),
      'utf-8'
    );

    console.log('\n‚ú® –ì–æ—Ç–æ–≤–æ!');
    console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ: ${updated} —Å–µ—Ç—ñ–≤`);
    console.log(`‚ùå –ü–æ–º–∏–ª–æ–∫: ${failed} —Å–µ—Ç—ñ–≤`);
    console.log(`üìä –í—Å—å–æ–≥–æ: ${transmogs.length} —Å–µ—Ç—ñ–≤`);
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  updateWowheadImages();
}

module.exports = { updateWowheadImages };

