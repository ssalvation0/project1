/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç—Ä–∞–Ω—Å–º–æ–≥—ñ–≤:
 * - –ü–æ–∫—Ä–∞—â—É—î –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª–∞—Å—ñ–≤
 * - –ü–æ–∫—Ä–∞—â—É—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–∫–æ–Ω–æ–∫
 * - –û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ –±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω–Ω—è
 */

require('dotenv').config();
const { getItemSetDetails, getClassesByName } = require('../utils/blizzardAPI');
const fs = require('fs').promises;
const path = require('path');

const TRANSMOGS_DATA_FILE = path.join(__dirname, '../data/transmogs.json');

const CLASS_MAP = {
  'warrior': 'Warrior',
  'paladin': 'Paladin',
  'hunter': 'Hunter',
  'rogue': 'Rogue',
  'priest': 'Priest',
  'deathknight': 'Death Knight',
  'shaman': 'Shaman',
  'mage': 'Mage',
  'warlock': 'Warlock',
  'monk': 'Monk',
  'druid': 'Druid',
  'demonhunter': 'Demon Hunter',
  'evoker': 'Evoker'
};

function normalizeClass(classSlug) {
  if (!classSlug) return 'All';
  const normalized = classSlug.toLowerCase().replace(/\s+/g, '');
  return CLASS_MAP[normalized] || classSlug.charAt(0).toUpperCase() + classSlug.slice(1);
}

async function loadTransmogs() {
  try {
    const data = await fs.readFile(TRANSMOGS_DATA_FILE, 'utf-8');
    return JSON.parse(data);
  } catch {
    return [];
  }
}

async function saveTransmogs(transmogs) {
  await fs.writeFile(TRANSMOGS_DATA_FILE, JSON.stringify(transmogs, null, 2), 'utf-8');
  console.log(`‚úì –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${transmogs.length} —Ç—Ä–∞–Ω—Å–º–æ–≥—ñ–≤`);
}

async function improveTransmogs() {
  console.log('üîß –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ç—Ä–∞–Ω—Å–º–æ–≥—ñ–≤...\n');

  const transmogs = await loadTransmogs();
  console.log(`üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${transmogs.length} —Ç—Ä–∞–Ω—Å–º–æ–≥—ñ–≤\n`);

  // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ, —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è
  const needsImprovement = transmogs.filter(t => 
    t.class === 'All' || 
    !t.iconUrl || 
    t.iconUrl.includes('questionmark') ||
    t.expansion === 'Unknown'
  );

  console.log(`üîç –ó–Ω–∞–π–¥–µ–Ω–æ ${needsImprovement.length} —Ç—Ä–∞–Ω—Å–º–æ–≥—ñ–≤ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è\n`);

  let improved = 0;
  let errors = 0;

  for (let i = 0; i < needsImprovement.length; i++) {
    const transmog = needsImprovement[i];
    const progress = `[${i + 1}/${needsImprovement.length}]`;

    try {
      console.log(`${progress} –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è "${transmog.name}" (ID: ${transmog.setId})...`);
      
      let details = null;
      try {
        details = await getItemSetDetails(transmog.setId);
      } catch (error) {
        // –Ø–∫—â–æ API –Ω–µ –ø—Ä–∞—Ü—é—î, –≤—Å–µ –æ–¥–Ω–æ —Å–ø—Ä–æ–±—É—î–º–æ –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–ª–∞—Å –ø–æ –Ω–∞–∑–≤—ñ
        console.log(`  ‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ –Ω–∞–∑–≤—ñ`);
      }

      // –û–Ω–æ–≤–ª—é—î–º–æ –∫–ª–∞—Å —è–∫—â–æ –±—É–≤ "All" (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ API –Ω–µ –ø—Ä–∞—Ü—é—î)
      if (transmog.class === 'All') {
        let updated = false;
        
        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª–∞—Å –∑ API
        if (details && details.classes && details.classes.length > 0) {
          transmog.class = normalizeClass(details.classes[0]);
          console.log(`  ‚úì –ö–ª–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–æ (–∑ API): ${transmog.class}`);
          updated = true;
        } else {
          // –Ø–∫—â–æ API –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –∫–ª–∞—Å –∞–±–æ –Ω–µ –ø—Ä–∞—Ü—é—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ –Ω–∞–∑–≤—ñ
          const nameClasses = getClassesByName(transmog.name);
          if (nameClasses.length > 0) {
            transmog.class = normalizeClass(nameClasses[0]); // –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à–∏–π –∑–Ω–∞–π–¥–µ–Ω–∏–π –∫–ª–∞—Å
            console.log(`  ‚úì –ö–ª–∞—Å –æ–Ω–æ–≤–ª–µ–Ω–æ (–∑ –Ω–∞–∑–≤–∏): ${transmog.class}`);
            updated = true;
          }
        }
        
        if (!updated) {
          console.log(`  ‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–ª–∞—Å –¥–ª—è "${transmog.name}"`);
        }
      }

      if (details) {

        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–∫–æ–Ω–∫—É —Ç–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —è–∫—â–æ –±—É–ª–∏ placeholder
        if ((!transmog.iconUrl || transmog.iconUrl.includes('questionmark')) && details.imageUrl) {
          transmog.imageUrl = details.imageUrl;
          transmog.iconUrl = details.iconUrl || details.imageUrl;
          console.log(`  ‚úì –ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ`);
        }

        // –û–Ω–æ–≤–ª—é—î–º–æ –æ–ø–∏—Å
        if (details.description && details.description !== 'Epic transmog set from World of Warcraft') {
          transmog.description = details.description;
        }

        improved++;
      }

      // –ó–∞—Ç—Ä–∏–º–∫–∞
      await new Promise(resolve => setTimeout(resolve, 100));

      // –ê–≤—Ç–æ–∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 20
      if ((i + 1) % 20 === 0) {
        await saveTransmogs(transmogs);
      }

    } catch (error) {
      errors++;
      console.error(`  ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}\n`);
    }
  }

  // –§—ñ–Ω–∞–ª—å–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
  await saveTransmogs(transmogs);

  console.log('\n‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log(`‚úì –ü–æ–∫—Ä–∞—â–µ–Ω–æ: ${improved}`);
  console.log(`‚ö†Ô∏è –ü–æ–º–∏–ª–æ–∫: ${errors}`);
}

improveTransmogs().catch(console.error);

